name: Build Release Asset - Windows x64

on:
  push:
    branches: [ master ]
    tags: 
      - 'v*'

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - uses: dorny/paths-filter@v2.2.0
      id: filter
      with: 
        filters: |
          version:
            - 'version.txt'
    - name: Setup .NET Core
      if: steps.filter.outputs.version == 'true'
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --no-restore --verbosity normal
    - name: Publish x64 release
      run: dotnet publish SwagLyricsGUI --self-contained true -p:PublishTrimmed=true -o Builds\win-x64\ -r win-x64 -c Release
    - name: Compile setup script
      shell: powershell
      run: .\inno_compile.ps1
    - name: Set version env
      run: echo ::set-env name=RELEASE_VER::$(cat version.txt)
    - name: Check if release exist
      shell: powershell
      run: echo ::set-env name=LATEST_TAG::$($WebResponse = curl https://api.github.com/repos/SwagLyrics/SwagLyricsGUI/releases/latest; $WebResponse.Content | ConvertFrom-Json | Select tag_name | foreach {$_.tag_name})
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      if: ${{ env.RELEASE_VER != env.LATEST_TAG }}
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_VER }}
        release_name: Release ${{ env.RELEASE_VER }}
        draft: false
        prerelease: false
    - name: Set Assets url
      if: ${{ env.RELEASE_VER != env.LATEST_TAG }}
      run: echo "::set-env name=UPLOAD_URL::${{ steps.create_release.outputs.upload_url }}"
    - name: Get release URL
      id: release_url
      shell: powershell
      if: ${{ env.RELEASE_VER == env.LATEST_TAG }}
      run: echo "::set-env name=UPLOAD_URL::$($WebResponse = curl https://api.github.com/repos/SwagLyrics/SwagLyricsGUI/releases/latest; $WebResponse.Content | ConvertFrom-Json | Select upload_url | foreach {$_.upload_url})"
    - name: Upload a Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.2
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          # The URL for uploading assets to the release
        upload_url: ${{ env.UPLOAD_URL }}
          # The path to the asset you want to upload
        asset_path: Installer\win-x64\SwagLyricsGUI-setup-x64.exe
          # The name of the asset you want to upload
        asset_name: SwagLyricsGUI-setup-x64.exe
          # The content-type of the asset you want to upload. See the supported Media Types here: https://www.iana.org/assignments/media-types/media-types.xhtml for more information
        asset_content_type: application
